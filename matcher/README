
After a tweet ( https://twitter.com/veorq/status/637616767058223104 ), I wanted
to see if my suggestion if generating a finite state machine with ragel was
actually faster.

Turns out it wasn't.

At least not for only 1000 keys anyway.  Ragel segfaulted when trying to create
a machine for 200,000 keys. :(

I also tested armon/go-radix and cloudflare/ahocorasick.

My test keys were the top 1000 email domains from the Linkedin leak a while ago.
I've been using it as a reasonable real-world test set every since I watched
John Graham-Cumming's talk https://www.youtube.com/watch?v=_41bkNr7eik

Anyways, searching 200000 inputs for the thousand keys 10 times; we see the ranking

(This version built with 1.8beta2)

<dgryski@kamek[matcher] \ʕ◔ϖ◔ʔ/ > for i in aho radix bsearch mph ragel map; do ./matcher -f ./alldomains.txt -which $i; done
2016/12/26 20:29:44 using matcher=aho
2016/12/26 20:29:57 time.Since(t0)=13.376110916s
2016/12/26 20:29:57 found=16274730
2016/12/26 20:30:00 using matcher=radix
2016/12/26 20:30:11 time.Since(t0)=11.507339672s
2016/12/26 20:30:11 found=15965200
2016/12/26 20:30:13 using matcher=bsearch
2016/12/26 20:30:24 time.Since(t0)=10.192506526s
2016/12/26 20:30:24 found=15965200
2016/12/26 20:30:27 using matcher=mph
2016/12/26 20:30:30 time.Since(t0)=3.321507662s
2016/12/26 20:30:30 found=15965200
2016/12/26 20:30:33 using matcher=ragel
2016/12/26 20:30:35 time.Since(t0)=2.306642565s
2016/12/26 20:30:35 found=15965200
2016/12/26 20:30:38 using matcher=map
2016/12/26 20:30:40 time.Since(t0)=1.741882892s
2016/12/26 20:30:40 found=15965200
